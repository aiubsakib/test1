name: 'terraform-Azure'
on:
  push:
    branches:
    - main
  pull_request:
env: 
      ROOT_PATH: '${{github.workspace}}/src'
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    environment: production
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: terraform init
      run: terraform init
      working-directory: ${{ env.ROOT_PATH }}
    - name: terraform Plan
      run: terraform plan 
      working-directory: ${{ env.ROOT_PATH }}
    - name: terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ env.ROOT_PATH }}

  jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Terraform Destroy
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          tf_version: 1.0.0
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        run: |
          cd terraform/
          terraform init
          terraform destroy -auto-approve
    
